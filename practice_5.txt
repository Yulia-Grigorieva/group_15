1.Критерии выбора тестов
Свойства хорошего тест-кейса:
- обладает высокой вероятностью обнаружения ошибки
- исследует соответствующую область приложения
- выполняет какие-то интересные действия
- не выполняет ненужных действий
- является не слишком простым, но и не слишком сложным
- не является избыточным по отношению к другим тестам
- делает обнаруженную ошибку очевидной
- позволяет легко диагностировать ошибку
- легко модифицируется
- не зависит от  других тестов
- не зависит от конкретных данных

Требования к идеальному критерию тестирования
 Достаточность (некоторое конечное множество тестов достаточно для тестирования данной программы)
 Полнота (в случае ошибки должен существовать тест из множества тестов, удовлетворяющих критерию, который раскрывает ошибку)
 Надежность (любые два множества тестов, удовлетворяющих ему, одновременно должны раскрывать или не раскрывать ошибки программы)
 Легкая проверяемость 

Классы критериев:
Структурные критерии (критерии белого ящика) используют информацию о структуре программы, предполагают знание исходного текста программы или спецификации программы, часто используются на этапах модульного и интеграционного тестирования (Unit testing, Integration testing).
Функциональные критерии (критерии черного ящика) формулируются в описании требований к программному изделию. Это  важнейший для программной индустрии критерий тестирования. Он обеспечивает контроль степени выполнения требований заказчика в программном продукте. Проблема функционального тестирования - трудоемкость, так как документы, фиксирующие требования к программному изделию (Software requirement specification, Functional specification и т.п.),достаточно объемны.
 Виды функциональных критериев:
- тестирование пунктов спецификации: набор тестов в совокупности должен обеспечить проверку каждого тестируемого пункта не менее одного раза
- тестирование классов входных данных: набор тестов в совокупности должен обеспечить проверку представителя каждого класса входных данных не менее одного раза.
- тестирование правил: набор тестов в совокупности должен обеспечить проверку каждого правила, если входные и выходные значения описываются набором правил некоторой грамматики; грамматика должна быть достаточно простой, чтобы трудоемкость разработки соответствующего набора тестов была реальной.
- тестирование классов выходных данных: набор тестов в совокупности должен обеспечить проверку представителя каждого выходного класса.
- тестирование функций: набор тестов в совокупности должен обеспечить проверку каждого действия, реализуемого тестируемым модулем, не менее одного раза; не обеспечивает покрытия части функциональности тестируемого компонента, связанной со структурными и поведенческими свойствами.
- комбинированные критерии для программ и спецификаций: набор тестов в совокупности должен обеспечить проверку всех комбинаций непротиворечивых условий программ и спецификаций не менее одного раза. При этом все комбинации непротиворечивых условий надо подтвердить, а условия противоречий следует обнаружить и ликвидировать.
  
